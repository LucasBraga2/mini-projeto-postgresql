// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  
  // 1. URL PRINCIPAL: Usada localmente E pela sua aplicação em produção
  // No .env local, ela lê: "postgresql://myuser:mypassword..."
  // No Vercel, vamos configurá-la para usar a URL de "pooling"
  url = env("DATABASE_URL") 
  
  // 2. URLs DIRETAS: Usadas pelo Vercel no momento do build/migração
  // O Vercel preenche estas variáveis automaticamente ao vincular o banco.
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") 
}

// ---- NOSSOS MODELOS ----

model User {
  id        String   @id @default(cuid()) // CUID é como um ObjectId
  name      String
  email     String   @unique
  password  String   // Não podemos mais usar "select: false". Faremos isso no serviço.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relação: Um Usuário pode ter muitos Filmes
  movies    Movie[]

  @@map("users") // Nome da tabela no banco
}

model Movie {
  id        String   @id @default(cuid())
  title     String
  director  String? // O '?' torna o campo opcional
  genre     String?
  releaseYear Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relação: O Filme pertence a um Usuário
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   // Esta é a chave estrangeira real

  @@map("movies") // Nome da tabela no banco
}